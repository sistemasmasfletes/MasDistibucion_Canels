<?php

namespace MasDistribucion\DefaultDb\Proxies\__CG__;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class DefaultDb_Entities_ScheduledRoute extends \DefaultDb_Entities_ScheduledRoute implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getSchedule()
    {
        $this->__load();
        return parent::getSchedule();
    }

    public function getScheduleNum()
    {
        $this->__load();
        return parent::getScheduleNum();
    }

    public function getRoute()
    {
        $this->__load();
        return parent::getRoute();
    }

    public function getDriver()
    {
        $this->__load();
        return parent::getDriver();
    }

    public function getVehicle()
    {
        $this->__load();
        return parent::getVehicle();
    }

    public function getScheduledDate()
    {
        $this->__load();
        return parent::getScheduledDate();
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function getProgress()
    {
        $this->__load();
        return parent::getProgress();
    }

    public function getStartDate()
    {
        $this->__load();
        return parent::getStartDate();
    }

    public function getEndDate()
    {
        $this->__load();
        return parent::getEndDate();
    }

    public function getStatusRoute()
    {
        $this->__load();
        return parent::getStatusRoute();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setSchedule($schedule)
    {
        $this->__load();
        return parent::setSchedule($schedule);
    }

    public function setScheduleNum($scheduleNum)
    {
        $this->__load();
        return parent::setScheduleNum($scheduleNum);
    }

    public function setRoute($route)
    {
        $this->__load();
        return parent::setRoute($route);
    }

    public function setDriver($driver)
    {
        $this->__load();
        return parent::setDriver($driver);
    }

    public function setVehicle($vehicle)
    {
        $this->__load();
        return parent::setVehicle($vehicle);
    }

    public function setScheduledDate($scheduledDate)
    {
        $this->__load();
        return parent::setScheduledDate($scheduledDate);
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function setProgress($progress)
    {
        $this->__load();
        return parent::setProgress($progress);
    }

    public function setStartDate($startDate)
    {
        $this->__load();
        return parent::setStartDate($startDate);
    }

    public function setEndDate($endDate)
    {
        $this->__load();
        return parent::setEndDate($endDate);
    }

    public function setStatusRoute($statusRoute)
    {
        $this->__load();
        return parent::setStatusRoute($statusRoute);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'scheduleNum', 'scheduledDate', 'status', 'progress', 'startDate', 'endDate', 'statusRoute', 'schedule', 'route', 'driver', 'vehicle');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}