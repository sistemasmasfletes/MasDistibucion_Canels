<?php

namespace MasDistribucion\DefaultDb\Proxies\__CG__;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class DefaultDb_Entities_Vehicle extends \DefaultDb_Entities_Vehicle implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function getStrType()
    {
        $this->__load();
        return parent::getStrType();
    }

    public function getVolume()
    {
        $this->__load();
        return parent::getVolume();
    }

    public function getFormatVolume()
    {
        $this->__load();
        return parent::getFormatVolume();
    }

    public function getEconomicNumber()
    {
        $this->__load();
        return parent::getEconomicNumber();
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function getCapacity()
    {
        $this->__load();
        return parent::getCapacity();
    }

    public function getFormatCapacity()
    {
        $this->__load();
        return parent::getFormatCapacity();
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function getTradeMark()
    {
        $this->__load();
        return parent::getTradeMark();
    }

    public function getPlate()
    {
        $this->__load();
        return parent::getPlate();
    }

    public function getColor()
    {
        $this->__load();
        return parent::getColor();
    }

    public function getGps()
    {
        $this->__load();
        return parent::getGps();
    }

    public function getModel()
    {
        $this->__load();
        return parent::getModel();
    }

    public function getWidth()
    {
        $this->__load();
        return parent::getWidth();
    }

    public function getFormatWidth()
    {
        $this->__load();
        return parent::getFormatWidth();
    }

    public function getHeight()
    {
        $this->__load();
        return parent::getHeight();
    }

    public function getFormatHeight()
    {
        $this->__load();
        return parent::getFormatHeight();
    }

    public function getDeep()
    {
        $this->__load();
        return parent::getDeep();
    }

    public function getFormatDeep()
    {
        $this->__load();
        return parent::getFormatDeep();
    }

    public function getDriver()
    {
        $this->__load();
        return parent::getDriver();
    }

    public function getNameDriver()
    {
        $this->__load();
        return parent::getNameDriver();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function setVolume($volume)
    {
        $this->__load();
        return parent::setVolume($volume);
    }

    public function setEconomicNumber($economicNumber)
    {
        $this->__load();
        return parent::setEconomicNumber($economicNumber);
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function setCapacity($capacity)
    {
        $this->__load();
        return parent::setCapacity($capacity);
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'type', 'volume', 'economicNumber', 'name', 'capacity', 'status', 'tradeMark', 'plate', 'color', 'gps', 'model', 'width', 'height', 'deep', 'driver');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}