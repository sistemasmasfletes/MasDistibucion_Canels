<?php

namespace MasDistribucion\DefaultDb\Proxies\__CG__;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class DefaultDb_Entities_RoutePointActivity extends \DefaultDb_Entities_RoutePointActivity implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getRoutePoint()
    {
        $this->__load();
        return parent::getRoutePoint();
    }

    public function getActivityType()
    {
        $this->__load();
        return parent::getActivityType();
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function getTransaction()
    {
        $this->__load();
        return parent::getTransaction();
    }

    public function getHoraActual()
    {
        $this->__load();
        return parent::getHoraActual();
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function getUserDelivery()
    {
        $this->__load();
        return parent::getUserDelivery();
    }

    public function getUserReceiving()
    {
        $this->__load();
        return parent::getUserReceiving();
    }

    public function getUserAbsence()
    {
        $this->__load();
        return parent::getUserAbsence();
    }

    public function getEntityFrom()
    {
        $this->__load();
        return parent::getEntityFrom();
    }

    public function getEntityTo()
    {
        $this->__load();
        return parent::getEntityTo();
    }

    public function getStatusReason()
    {
        $this->__load();
        return parent::getStatusReason();
    }

    public function getScheduledRoute()
    {
        $this->__load();
        return parent::getScheduledRoute();
    }

    public function getScheduledLog()
    {
        $this->__load();
        return parent::getScheduledLog();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setRoutePoint($routePoint)
    {
        $this->__load();
        return parent::setRoutePoint($routePoint);
    }

    public function setActivityType($activityType)
    {
        $this->__load();
        return parent::setActivityType($activityType);
    }

    public function setDate($date)
    {
        $this->__load();
        return parent::setDate($date);
    }

    public function setTransaction($transaction)
    {
        $this->__load();
        return parent::setTransaction($transaction);
    }

    public function setHoraActual($horaActual)
    {
        $this->__load();
        return parent::setHoraActual($horaActual);
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function setScheduledRoute($scheduledRoute)
    {
        $this->__load();
        return parent::setScheduledRoute($scheduledRoute);
    }

    public function setUserDelivery($userDelivery)
    {
        $this->__load();
        return parent::setUserDelivery($userDelivery);
    }

    public function setUserReceiving($userReceiving)
    {
        $this->__load();
        return parent::setUserReceiving($userReceiving);
    }

    public function setUserAbsence($userAbsence)
    {
        $this->__load();
        return parent::setUserAbsence($userAbsence);
    }

    public function setEntityFrom($entityFrom)
    {
        $this->__load();
        return parent::setEntityFrom($entityFrom);
    }

    public function setEntityTo($entityTo)
    {
        $this->__load();
        return parent::setEntityTo($entityTo);
    }

    public function setStatusReason($statusReason)
    {
        $this->__load();
        return parent::setStatusReason($statusReason);
    }

    public function setScheduledLog($scheduledLog)
    {
        $this->__load();
        return parent::setScheduledLog($scheduledLog);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'date', 'horaActual', 'status', 'userAbsence', 'entityFrom', 'entityTo', 'statusReason', 'routePoint', 'activityType', 'transaction', 'userDelivery', 'userReceiving', 'scheduledRoute', 'scheduledLog');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}