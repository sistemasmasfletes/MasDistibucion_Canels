<?php

namespace MasDistribucion\DefaultDb\Proxies\__CG__;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class DefaultDb_Entities_PromotionSchedule extends \DefaultDb_Entities_PromotionSchedule implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setPromotion($promotion)
    {
        $this->__load();
        return parent::setPromotion($promotion);
    }

    public function setCreationDate($creationDate)
    {
        $this->__load();
        return parent::setCreationDate($creationDate);
    }

    public function setPromotionDate($promotionDate)
    {
        $this->__load();
        return parent::setPromotionDate($promotionDate);
    }

    public function setUser($user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function setClient($client)
    {
        $this->__load();
        return parent::setClient($client);
    }

    public function setPoint($point)
    {
        $this->__load();
        return parent::setPoint($point);
    }

    public function setActivityPoint($activityPoint)
    {
        $this->__load();
        return parent::setActivityPoint($activityPoint);
    }

    public function setPackageOrder($packageOrder)
    {
        $this->__load();
        return parent::setPackageOrder($packageOrder);
    }

    public function setPaymentStatus($paymentStatus)
    {
        $this->__load();
        return parent::setPaymentStatus($paymentStatus);
    }

    public function setShippingStatus($shippingStatus)
    {
        $this->__load();
        return parent::setShippingStatus($shippingStatus);
    }

    public function setConsumerType($consumerType)
    {
        $this->__load();
        return parent::setConsumerType($consumerType);
    }

    public function setInterestLevel($interestLevel)
    {
        $this->__load();
        return parent::setInterestLevel($interestLevel);
    }

    public function setRequest($request)
    {
        $this->__load();
        return parent::setRequest($request);
    }

    public function setTelephone($telephone)
    {
        $this->__load();
        return parent::setTelephone($telephone);
    }

    public function setReceivingUser($receivingUser)
    {
        $this->__load();
        return parent::setReceivingUser($receivingUser);
    }

    public function setComments($comments)
    {
        $this->__load();
        return parent::setComments($comments);
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getPromotion()
    {
        $this->__load();
        return parent::getPromotion();
    }

    public function getCreationDate()
    {
        $this->__load();
        return parent::getCreationDate();
    }

    public function getPromotionDate()
    {
        $this->__load();
        return parent::getPromotionDate();
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function getClient()
    {
        $this->__load();
        return parent::getClient();
    }

    public function getPoint()
    {
        $this->__load();
        return parent::getPoint();
    }

    public function getActivityPoint()
    {
        $this->__load();
        return parent::getActivityPoint();
    }

    public function getPackageOrder()
    {
        $this->__load();
        return parent::getPackageOrder();
    }

    public function getPaymentStatus()
    {
        $this->__load();
        return parent::getPaymentStatus();
    }

    public function getShippingStatus()
    {
        $this->__load();
        return parent::getShippingStatus();
    }

    public function getConsumerType()
    {
        $this->__load();
        return parent::getConsumerType();
    }

    public function getInterestLevel()
    {
        $this->__load();
        return parent::getInterestLevel();
    }

    public function getRequest()
    {
        $this->__load();
        return parent::getRequest();
    }

    public function getTelephone()
    {
        $this->__load();
        return parent::getTelephone();
    }

    public function getReceivingUser()
    {
        $this->__load();
        return parent::getReceivingUser();
    }

    public function getComments()
    {
        $this->__load();
        return parent::getComments();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'creationDate', 'promotionDate', 'paymentStatus', 'shippingStatus', 'consumerType', 'interestLevel', 'request', 'telephone', 'receivingUser', 'comments', 'promotion', 'user', 'client', 'point', 'activityPoint', 'packageOrder');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}